upgit() {
    reps=("dot" "javascr" "pyscr")
    r="$1"
    usage="\033[1mUSAGE\033[0m\n\tupgit [WORKSPACE]\n\n\033[1mLIST OF WORKSPACES\033[0m\n\t- [dot] dotfiles\n\t- [javascr] java sample files\n\t- [pyscr] python scripts\n"

    case $r in
        ${reps[1]})
            dir=~/.dotfiles
            ;;
        ${reps[2]})
            dir=~/Documents/Dev/javascr
            ;;
        ${reps[3]})
            dir=~/Documents/Dev/pyscr
            ;;
        *)
            echo $usage
            ;;
    esac
    if [[ " ${reps[*]} " =~ " $r " ]]; then
        date=$(date +%F)
        time=$(date +%T)
        git -C $dir add .
        git -C $dir commit -m "backup: $date | $time"
        git -C $dir push
    fi
}

acs(){
    (( $+commands[python] )) || {
        echo "[error] No python executable detected"
        return
    }
    alias | python $HOME/.local/bin/acs.py $@
}

passin() {
    pass insert $1
    pass git push
}

actenv() {
    envdir="$1"
    source $envdir/bin/activate
}

updotmod() {
    zshdir=~/.config/zsh/plugins
    mods=("fzf-tab" "powerlevel10k" "zsh-autosuggestions" "zsh-syntax-highlighting")
    for mod in ${mods}; do
        git -C $zshdir/$mod pull
    done
    git -C ~/.config/cascade pull
}

notes() {
    f="$(find ~/Documents/Notes/wiki | fzf --reverse --border=sharp --height=50%)"
    [[ ! (-z $f) ]] && v $f
}

nn() {
    if [[ ! (-z "$1") ]] then
        echo "* [[$1]]" >> ~/Documents/Notes/wiki/index.md
        echo "# $1\n\n" >> ~/Documents/Notes/wiki/"$1".md && v ~/Documents/Notes/wiki/"$1".md
    else
        echo "\033[1mUSAGE\033[0m\n\tnn \"[FILENAME]\""
    fi
}
